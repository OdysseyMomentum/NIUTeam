{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/thread-loader/dist/cjs.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--14-3!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/auth/AuthWrapper.ts","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/auth/AuthWrapper.ts","mtime":1604312863667},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/auth/AuthWrapper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Vue } from 'vue-property-decorator'\r\nimport { User } from '@/auth/User'\r\nimport createAuth0Client, {\r\n  Auth0Client, CacheLocation,\r\n  GetIdTokenClaimsOptions,\r\n  GetTokenSilentlyOptions, GetTokenWithPopupOptions, IdToken, LogoutOptions,\r\n  PopupLoginOptions,\r\n  RedirectLoginOptions\r\n} from '@auth0/auth0-spa-js'\r\n\r\nexport type Auth0Options = {\r\n  domain: string;\r\n  clientId: string;\r\n  audience: string;\r\n  cacheLocation: CacheLocation;\r\n  [key: string]: string | undefined;\r\n}\r\n\r\n// @ts-ignore\r\nexport type RedirectCallback = (appState) => void\r\n\r\n@Component({})\r\nexport class AuthWrapper extends Vue {\r\n  loading = true\r\n  isAuthenticated? = false\r\n  user?: User\r\n  auth0Client?: Auth0Client\r\n  popupOpen = false\r\n  error?: Error\r\n\r\n  async getUser () {\r\n    return new User(await this.auth0Client?.getUser())\r\n  }\r\n\r\n  async loginWithPopup (popupLoginOptions: PopupLoginOptions) {\r\n    this.popupOpen = true\r\n\r\n    try {\r\n      await this.auth0Client?.loginWithPopup(popupLoginOptions)\r\n    } catch (e) {\r\n      console.error(e)\r\n      this.error = e\r\n    } finally {\r\n      this.popupOpen = false\r\n    }\r\n\r\n    this.user = await this.getUser()\r\n    this.isAuthenticated = true\r\n  }\r\n\r\n  loginWithRedirect (redirectLoginOptions: RedirectLoginOptions): Promise<void> | undefined {\r\n    return this.auth0Client?.loginWithRedirect(redirectLoginOptions)\r\n  }\r\n\r\n  getIdTokenClaims (getIdTokenClaimsOptions: GetIdTokenClaimsOptions): Promise<IdToken> | undefined {\r\n    return this.auth0Client?.getIdTokenClaims(getIdTokenClaimsOptions)\r\n  }\r\n\r\n  getTokenSilently (getTokenSilentlyOptions: GetTokenSilentlyOptions): Promise<any> | undefined {\r\n    return this.auth0Client?.getTokenSilently(getTokenSilentlyOptions)\r\n  }\r\n\r\n  getTokenWithPopup (getTokenWithPopupOptions: GetTokenWithPopupOptions): Promise<string> | undefined {\r\n    return this.auth0Client?.getTokenWithPopup(getTokenWithPopupOptions)\r\n  }\r\n\r\n  logout (logoutOptions: LogoutOptions): void {\r\n    return this.auth0Client?.logout(logoutOptions)\r\n  }\r\n\r\n  // We initialize all that shit with our own method (we cannot pass any parameters to the created() lifecycle hook).\r\n  async init (onRedirectCallback: RedirectCallback,\r\n    redirectUri: string,\r\n    auth0Options: Auth0Options) {\r\n    this.auth0Client = await createAuth0Client({\r\n      domain: auth0Options.domain,\r\n      client_id: auth0Options.clientId,\r\n      audience: auth0Options.audience,\r\n      cacheLocation: auth0Options.cacheLocation,\r\n      redirect_uri: redirectUri\r\n    })\r\n\r\n    try {\r\n      if (window.location.search.includes('error') ||\r\n        (window.location.search.includes('code=')) &&\r\n        window.location.search.includes('state=')) {\r\n        const { appState } = await this.auth0Client?.handleRedirectCallback() ?? { appState: undefined }\r\n\r\n        onRedirectCallback(appState)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      this.error = e\r\n    } finally {\r\n      this.isAuthenticated = await this.auth0Client?.isAuthenticated()\r\n      this.user = await this.getUser()\r\n      this.loading = false\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]}