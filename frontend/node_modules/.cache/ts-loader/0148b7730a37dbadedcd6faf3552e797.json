{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--13-2!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/Details.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/Details.vue","mtime":1605127685904},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2VyZmFsay93c19maWxlZGdyL2ZpbGVkZ3Itc3RyZWFtcy1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0ICdsZWFmbGV0L2Rpc3QvbGVhZmxldC5jc3MnOwppbXBvcnQgTGluZUNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9wbG90cy9MaW5lQ2hhcnQudnVlJzsKaW1wb3J0IE1hcCBmcm9tICdAL2NvbXBvbmVudHMvTWFwLnZ1ZSc7CmltcG9ydCBXZWF0aGVyIGZyb20gJ0AvY29tcG9uZW50cy9XZWF0aGVyLnZ1ZSc7CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7Cgp2YXIgRGV0YWlscyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhEZXRhaWxzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihEZXRhaWxzKTsKCiAgZnVuY3Rpb24gRGV0YWlscygpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRGV0YWlscyk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKTsKICAgIF90aGlzLnJlcmVuZGVyS2V5ID0gMDsKICAgIF90aGlzLnNob3cgPSBmYWxzZTsKICAgIF90aGlzLm9iamVjdFJlc291cmNlcyA9IF90aGlzLiRzdG9yZS5zdGF0ZS5yZXNvdXJjZXM7CiAgICBfdGhpcy5vYmplY3QgPSBfdGhpcy4kc3RvcmUuc3RhdGUub2JqZWN0OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKERldGFpbHMsIFt7CiAgICBrZXk6ICJzaG93Q2hhcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNob3dDaGFydCgpIHsKICAgICAgdGhpcy5zaG93ID0gdHJ1ZTsKICAgICAgdGhpcy5yZXJlbmRlcktleSA9IDA7CiAgICB9CiAgfSwgewogICAga2V5OiAic3RhcnREb3dubG9hZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3N0YXJ0RG93bmxvYWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHJlc291cmNlSWQpIHsKICAgICAgICB2YXIgYWNjZXNzVG9rZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEb3dubG9hZGluZzogJyArIHJlc291cmNlSWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGF1dGguZ2V0VG9rZW5TaWxlbnRseSgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBhY2Nlc3NUb2tlbiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgZmV0Y2goZW5jb2RlVVJJKCcvYXBpL3Jlc291cmNlL2dldCcpLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgYWNjZXNzVG9rZW4KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgIG9iamVjdDogewogICAgICAgICAgICAgICAgICAgICAgdW9pOiB0aGlzLm9iamVjdC51b2kKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHJlc291cmNlOiB7CiAgICAgICAgICAgICAgICAgICAgICByZXNvdXJjZUlkOiByZXNvdXJjZUlkCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgcmVzb3VyY2UsIHJlc291cmNlTWV0YTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc291cmNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc291cmNlTWV0YSA9IHJlc291cmNlLm1ldGE7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc291cmNlTWV0YS5hY2Nlc3MgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzb3VyY2VNZXRhLmZpbGV0eXBlID09PSAnLmpwZycgfHwgcmVzb3VyY2VNZXRhLmZpbGV0eXBlID09PSAnLmpwZWcnIHx8IHJlc291cmNlTWV0YS5maWxldHlwZSA9PT0gJy5wbmcnIHx8IHJlc291cmNlTWV0YS5maWxldHlwZSA9PT0gJy5wZGYnIHx8IHJlc291cmNlTWV0YS5maWxldHlwZSA9PT0gJy5zdmcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9wZW4ocmVzb3VyY2VNZXRhLmFjY2VzcywgJ19ibGFuaycpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKHJlc291cmNlTWV0YS5hY2Nlc3MpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KCkpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdUaGVyZSB3YXMgYW4gZXJyb3IhJywgZXJyb3IpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHN0YXJ0RG93bmxvYWQoX3gpIHsKICAgICAgICByZXR1cm4gX3N0YXJ0RG93bmxvYWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHN0YXJ0RG93bmxvYWQ7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJnZXREb2N1bWVudHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldERvY3VtZW50cygpIHsKICAgICAgcmV0dXJuIHRoaXMub2JqZWN0UmVzb3VyY2VzLmZpbHRlcihmdW5jdGlvbiAocikgewogICAgICAgIHJldHVybiByLnJlc291cmNlVHlwZSA9PT0gJ0RPQ1VNRU5UJyAmJiByLm1ldGEgIT0gbnVsbDsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0U2Vuc29ycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U2Vuc29ycygpIHsKICAgICAgcmV0dXJuIHRoaXMub2JqZWN0UmVzb3VyY2VzLmZpbHRlcihmdW5jdGlvbiAocikgewogICAgICAgIHJldHVybiByLnJlc291cmNlVHlwZSA9PT0gJ1NFTlNPUic7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIERldGFpbHM7Cn0oVnVlKTsKCkRldGFpbHMgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIE1hcDogTWFwLAogICAgV2VhdGhlcjogV2VhdGhlciwKICAgIExpbmVDaGFydDogTGluZUNoYXJ0CiAgfQp9KV0sIERldGFpbHMpOwpleHBvcnQgZGVmYXVsdCBEZXRhaWxzOw=="},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/Details.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport 'leaflet/dist/leaflet.css'\nimport LineChart from '@/components/plots/LineChart.vue'\nimport Map from '@/components/Map.vue'\nimport Weather from '@/components/Weather.vue'\nimport {Component, Vue} from 'vue-property-decorator'\nimport {IDocumentMeta, IResourceType} from '@/types/ResourceType'\nimport {IObjectType} from '@/types/ObjectType'\nimport {IUserType} from '@/types/UserType'\n\n@Component({\n  components: {\n    Map,\n    Weather,\n    LineChart\n  }\n})\nexport default class Details extends Vue {\n  private objectResources: IResourceType[]\n  private object: IObjectType\n  private rerenderKey = 0\n  public show = false\n\n  private showChart () {\n    this.show = true\n    this.rerenderKey = 0\n  }\n\n  constructor() {\n    super()\n    this.objectResources = this.$store.state.resources\n    this.object = this.$store.state.object\n  }\n\n  private async startDownload(resourceId: string) {\n    console.log('Downloading: ' + resourceId)\n    const accessToken = await this.$auth.getTokenSilently()\n    fetch(encodeURI('/api/resource/get'), {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + accessToken\n      },\n      body: JSON.stringify({\n        object: {\n          uoi: this.object.uoi\n        },\n        resource: {\n          resourceId: resourceId\n        }\n\n      })\n    }).then(async response => {\n      const resource: IResourceType = await response.json() as IResourceType\n      const resourceMeta = resource.meta as IDocumentMeta\n\n      if (resourceMeta.access !== undefined) {\n        if (resourceMeta.filetype === '.jpg' ||\n          resourceMeta.filetype === '.jpeg' ||\n          resourceMeta.filetype === '.png' ||\n          resourceMeta.filetype === '.pdf' ||\n          resourceMeta.filetype === '.svg') {\n          window.open(resourceMeta.access, '_blank')\n        } else {\n          window.open(resourceMeta.access)\n        }\n      }\n    })\n      .catch(error => {\n        console.error('There was an error!', error)\n      })\n  }\n\n  private getDocuments(): IResourceType[] {\n    return this.objectResources.filter(r => (r.resourceType === 'DOCUMENT' && r.meta != null))\n  }\n\n  private getSensors(): IResourceType[] {\n    return this.objectResources.filter(r => (r.resourceType === 'SENSOR'))\n  }\n}\n"],"sourceRoot":""}]}