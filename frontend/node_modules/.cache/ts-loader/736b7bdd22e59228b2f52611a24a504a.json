{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--13-2!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/plots/LineChart.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/plots/LineChart.vue","mtime":1605305109014},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2VyZmFsay93c19maWxlZGdyL2ZpbGVkZ3Itc3RyZWFtcy1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL2VyZmFsay93c19maWxlZGdyL2ZpbGVkZ3Itc3RyZWFtcy1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7Cgp2YXIgTGluZUNoYXJ0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKExpbmVDaGFydCwgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTGluZUNoYXJ0KTsKCiAgZnVuY3Rpb24gTGluZUNoYXJ0KCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaW5lQ2hhcnQpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5kYXRhID0gW3sKICAgICAgcHJpY2U6IDQwMTI5LAogICAgICB5ZWFyOiAyMDA5CiAgICB9LCB7CiAgICAgIHByaWNlOiAxNjY0NDMsCiAgICAgIHllYXI6IDIwMTAKICAgIH0sIHsKICAgICAgcHJpY2U6IDE1MDc5MywKICAgICAgeWVhcjogMjAxMgogICAgfSwgewogICAgICBwcmljZTogNjIzNDIsCiAgICAgIHllYXI6IDIwMTQKICAgIH0sIHsKICAgICAgcHJpY2U6IDI3NjQ3LAogICAgICB5ZWFyOiAyMDE2CiAgICB9LCB7CiAgICAgIHByaWNlOiAzMDAwMCwKICAgICAgeWVhcjogMjAxNwogICAgfV07CiAgICBfdGhpcy5tYXJnaW4gPSA1MDsKICAgIF90aGlzLndpZHRoID0gNzUwIC0gX3RoaXMubWFyZ2luICogMjsKICAgIF90aGlzLmhlaWdodCA9IDQwMCAtIF90aGlzLm1hcmdpbiAqIDI7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTGluZUNoYXJ0LCBbewogICAga2V5OiAiY3JlYXRlU3ZnIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVTdmcoKSB7CiAgICAgIHRoaXMuc3ZnID0gZDMuc2VsZWN0KCcjbGluZUNoYXJ0JykuYXBwZW5kKCdzdmcnKS5hdHRyKCd3aWR0aCcsIHRoaXMud2lkdGggKyB0aGlzLm1hcmdpbiAqIDIpLmF0dHIoJ2hlaWdodCcsIHRoaXMuaGVpZ2h0ICsgdGhpcy5tYXJnaW4gKiAyKS5hcHBlbmQoJ2cnKS5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyB0aGlzLm1hcmdpbiArICcsJyArIHRoaXMubWFyZ2luICsgJyknKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkcmF3UGxvdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZHJhd1Bsb3QoaW5wdXREYXRhKSB7CiAgICAgIHZhciBwcmljZSA9IGlucHV0RGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gcGFyc2VJbnQoaXRlbS5wcmljZSk7CiAgICAgIH0pOwogICAgICB2YXIgeWVhciA9IGlucHV0RGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS55ZWFyOwogICAgICB9KTsKICAgICAgdmFyIHByaWNlTWluID0gTWF0aC5taW4uYXBwbHkoTWF0aCwgX3RvQ29uc3VtYWJsZUFycmF5KHByaWNlKSk7CiAgICAgIHZhciBwcmljZU1heCA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheShwcmljZSkpOyAvLyBBZGQgWCBheGlzCgogICAgICB2YXIgeCA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFsyMDA5LCAyMDE3XSkucmFuZ2UoWzAsIHRoaXMud2lkdGhdKTsKICAgICAgdGhpcy5zdmcuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCcgKyB0aGlzLmhlaWdodCArICcpJykuY2FsbChkMy5heGlzQm90dG9tKHgpLnRpY2tGb3JtYXQoZDMuZm9ybWF0KCdkJykpKTsgLy8gQWRkIFkgYXhpcwoKICAgICAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgcHJpY2VNYXhdKS5yYW5nZShbdGhpcy5oZWlnaHQsIDBdKTsKICAgICAgdGhpcy5zdmcuYXBwZW5kKCdnJykuY2FsbChkMy5heGlzTGVmdCh5KSk7IC8vIEFkZCBsaW5lCgogICAgICB0aGlzLnN2Zy5hcHBlbmQoJ3BhdGgnKS5kYXR1bShpbnB1dERhdGEpLmF0dHIoJ2ZpbGwnLCAnbm9uZScpLmF0dHIoJ3N0cm9rZScsICdibGFjaycpLmF0dHIoJ3N0cm9rZS13aWR0aCcsIDIpLmF0dHIoJ2QnLCBkMy5saW5lKCkgLy8gLmN1cnZlKGQzLmN1cnZlTmF0dXJhbCkKICAgICAgLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4geChkLnllYXIpOwogICAgICB9KS55KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHkoZC5wcmljZSk7CiAgICAgIH0pKTsgLy8gQWRkIGRvdHMKCiAgICAgIHZhciBkb3RzID0gdGhpcy5zdmcuYXBwZW5kKCdnJyk7CiAgICAgIGRvdHMuc2VsZWN0QWxsKCdkb3QnKS5kYXRhKGlucHV0RGF0YSkuZW50ZXIoKS5hcHBlbmQoJ2NpcmNsZScpLmF0dHIoJ2N4JywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4geChkLnllYXIpOwogICAgICB9KS5hdHRyKCdjeScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHkoZC5wcmljZSk7CiAgICAgIH0pLmF0dHIoJ3InLCAzKTsgLy8gLnN0eWxlKCdvcGFjaXR5JywgMC41KQoKICAgICAgdGhpcy5zdmcuYXBwZW5kKCd0ZXh0JykuYXR0cigneCcsIHRoaXMud2lkdGggLyAyKS5hdHRyKCd5JywgMCAtIHRoaXMubWFyZ2luIC8gMikuYXR0cigndGV4dC1hbmNob3InLCAnbWlkZGxlJykudGV4dCgnUHJpY2UnKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjbGVhclBsb3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNsZWFyUGxvdCgpIHsKICAgICAgZDMuc2VsZWN0KCdzdmcnKS5yZW1vdmUoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZURyYXciLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlRHJhdygpIHsKICAgICAgdGhpcy5jbGVhclBsb3QoKTsKICAgICAgdGhpcy5jcmVhdGVTdmcoKTsKICAgICAgdGhpcy5kcmF3UGxvdChbewogICAgICAgIHByaWNlOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksCiAgICAgICAgeWVhcjogMjAwOQogICAgICB9LCB7CiAgICAgICAgcHJpY2U6IDQwMDAwICogTWF0aC5yYW5kb20oKSwKICAgICAgICB5ZWFyOiAyMDEwCiAgICAgIH0sIHsKICAgICAgICBwcmljZTogNDAwMDAgKiBNYXRoLnJhbmRvbSgpLAogICAgICAgIHllYXI6IDIwMTIKICAgICAgfSwgewogICAgICAgIHByaWNlOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksCiAgICAgICAgeWVhcjogMjAxNAogICAgICB9LCB7CiAgICAgICAgcHJpY2U6IDQwMDAwICogTWF0aC5yYW5kb20oKSwKICAgICAgICB5ZWFyOiAyMDE2CiAgICAgIH0sIHsKICAgICAgICBwcmljZTogNDAwMDAgKiBNYXRoLnJhbmRvbSgpLAogICAgICAgIHllYXI6IDIwMTcKICAgICAgfV0pOwogICAgfQogIH0sIHsKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHRoaXMuY3JlYXRlU3ZnKCk7CiAgICAgIHRoaXMuZHJhd1Bsb3QodGhpcy5kYXRhKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBMaW5lQ2hhcnQ7Cn0oVnVlKTsKCkxpbmVDaGFydCA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7fSldLCBMaW5lQ2hhcnQpOwpleHBvcnQgZGVmYXVsdCBMaW5lQ2hhcnQ7"},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/plots/LineChart.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport * as d3 from 'd3'\n\n@Component({})\nexport default class LineChart extends Vue {\n  private data = [\n    { price: 40129, year: 2009 },\n    { price: 166443, year: 2010 },\n    { price: 150793, year: 2012 },\n    { price: 62342, year: 2014 },\n    { price: 27647, year: 2016 },\n    { price: 30000, year: 2017 }\n  ];\n\n  private svg: any;\n  private d?: number;\n  private margin = 50;\n  private width = 750 - (this.margin * 2);\n  private height = 400 - (this.margin * 2);\n\n  private createSvg (): void {\n    this.svg = d3.select('#lineChart')\n      .append('svg')\n      .attr('width', this.width + (this.margin * 2))\n      .attr('height', this.height + (this.margin * 2))\n      .append('g')\n      .attr('transform', 'translate(' + this.margin + ',' + this.margin + ')')\n  }\n\n  private drawPlot (inputData: any[]): void {\n    const price = inputData.map(item => parseInt(item.price))\n    const year = inputData.map(item => item.year)\n    const priceMin = Math.min(...price)\n    const priceMax = Math.max(...price)\n\n    // Add X axis\n    const x = d3.scaleLinear()\n      .domain([2009, 2017])\n      .range([0, this.width])\n    this.svg.append('g')\n      .attr('transform', 'translate(0,' + this.height + ')')\n      .call(d3.axisBottom(x).tickFormat(d3.format('d')))\n\n    // Add Y axis\n    const y = d3.scaleLinear()\n      .domain([0, priceMax])\n      .range([this.height, 0])\n    this.svg.append('g')\n      .call(d3.axisLeft(y))\n\n    // Add line\n    this.svg.append('path')\n      .datum(inputData)\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 2)\n      .attr('d', d3.line()\n        // .curve(d3.curveNatural)\n        .x(function (d: any) { return x(d.year) })\n        .y(function (d: any) { return y(d.price) })\n      )\n\n    // Add dots\n    const dots = this.svg.append('g')\n    dots.selectAll('dot')\n      .data(inputData)\n      .enter()\n      .append('circle')\n      .attr('cx', (d: { year: any}) => x(d.year))\n      .attr('cy', (d: { price: any}) => y(d.price))\n      .attr('r', 3)\n      // .style('opacity', 0.5)\n\n    this.svg.append('text')\n      .attr('x', (this.width / 2))\n      .attr('y', 0 - (this.margin / 2))\n      .attr('text-anchor', 'middle')\n      .text('Price')\n  }\n\n  private clearPlot () {\n    d3.select('svg').remove()\n  }\n\n  private reDraw (): void {\n    this.clearPlot()\n    this.createSvg()\n    this.drawPlot(\n      [\n        { price: 40000 * Math.random(), year: 2009 },\n        { price: 40000 * Math.random(), year: 2010 },\n        { price: 40000 * Math.random(), year: 2012 },\n        { price: 40000 * Math.random(), year: 2014 },\n        { price: 40000 * Math.random(), year: 2016 },\n        { price: 40000 * Math.random(), year: 2017 }\n      ]\n    )\n  }\n\n  mounted () {\n    this.createSvg()\n    this.drawPlot(this.data)\n  }\n}\n"],"sourceRoot":""}]}