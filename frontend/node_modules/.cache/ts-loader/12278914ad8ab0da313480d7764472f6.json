{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--13-2!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/views/Profile.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/views/Profile.vue","mtime":1604408313420},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/views/Profile.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue } from \"vue-property-decorator\";\nimport store from \"../store\";\nimport dateFormat from 'dateformat'\n\nexport default class Profile extends Vue {\n\n\nmounted () {\n    console.log(\"mounted Profile\");\n}\n\n  get fname() {\n    return this.$store.state.fname;\n  }\n  set fname(value) {\n    this.$store.commit('updateFname', value);\n  }\n\n  get lname() {\n    return this.$store.state.lname;\n  }\n  set lname(value) {\n    this.$store.commit('updateLname', value);\n  }\n\n  get email() {\n    return this.$store.state.email;\n  }\n  set email(value) {\n    this.$store.commit('updateEmail', value);\n  }\n\n  get bday() {\n    return this.$store.state.bday;\n  }\n  set bday(value) {\n    this.$store.commit('updateBday', value);\n  }\n\n  get street() {\n    return this.$store.state.street;\n  }\n  set street(value) {\n    this.$store.commit('updateStreet', value);\n  }\n\n  get snumber() {\n    return this.$store.state.snumber;\n  }\n  set snumber(value) {\n    this.$store.commit('updateSnumber', value);\n  }\n\n  get postal_code() {\n    return this.$store.state.postal_code;\n  }\n  set postal_code(value) {\n    this.$store.commit('updatePostal_code', value);\n  }\n\n  get city() {\n    return this.$store.state.city;\n  }\n  set city(value) {\n    this.$store.commit('updateCity', value);\n  }\n\n  get country() {\n    return this.$store.state.country;\n  }\n  set country(value) {\n    this.$store.commit('updateCountry', value);\n  }\n  \n  async getUser() {\n    const accessToken = await this.$auth.getTokenSilently();\n    console.log(accessToken);\n    const result = await fetch(encodeURI(\"/api/user/get\"), {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      }\n    });\n    const data = await result.json();\n    this.fname = data.firstname\n    this.lname = data.lastname\n    this.email = data.email\n    this.bday = dateFormat(new Date(data.birthdate*1000),'yyyy-mm-dd')\n    this.street = data.streetName\n    this.snumber = data.streetNumber\n    this.postal_code = data.zipcode\n    this.city = data.city\n    this.country = data.country\n  }\n    async putUser() {\n    const accessToken = await this.$auth.getTokenSilently();\n    console.log(accessToken);\n    const result = await fetch(encodeURI(\"/api/user/update\"), {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n      body: JSON.stringify({ userId: this.$auth.user.sub, \n                             email: this.$auth.user.email, \n                             firstname: this.fname, \n                             lastname: this.lname, \n                             birthdate: parseInt((new Date(this.bday).getTime() / 1000).toFixed(0)), \n                             streetName: this.street, \n                             streetNumber: this.snumber,\n                             zipcode: this.postal_code, \n                             city: this.city, \n                             country: this.country })\n    });\n    const data = await result.json();\n    console.log(data);\n    \n  }\n}\n"],"sourceRoot":""}]}