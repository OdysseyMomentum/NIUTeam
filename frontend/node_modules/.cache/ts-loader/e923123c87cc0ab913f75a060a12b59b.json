{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--13-2!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/views/Profile.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/views/Profile.vue","mtime":1604953541427},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdWIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2VyZmFsay93c19maWxlZGdyL2ZpbGVkZ3Itc3RyZWFtcy1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCB7IFZ1ZSB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgZGF0ZUZvcm1hdCBmcm9tICJkYXRlZm9ybWF0IjsKCnZhciBQcm9maWxlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKFByb2ZpbGUsIF9WdWUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFByb2ZpbGUpOwoKICBmdW5jdGlvbiBQcm9maWxlKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm9maWxlKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpOwogICAgX3RoaXMuY1VzZXIgPSBudWxsOwogICAgX3RoaXMuZmlyc3RuYW1lID0gX3RoaXMuJHN0b3JlLnN0YXRlLnVzZXIuZmlyc3RuYW1lOwogICAgX3RoaXMubGFzdG5hbWUgPSBfdGhpcy4kc3RvcmUuc3RhdGUudXNlci5sYXN0bmFtZTsKICAgIF90aGlzLmVtYWlsID0gX3RoaXMuJHN0b3JlLnN0YXRlLnVzZXIuZW1haWw7CiAgICBfdGhpcy5iaXJ0aGRhdGUgPSBkYXRlRm9ybWF0KG5ldyBEYXRlKF90aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmJpcnRoZGF0ZSAqIDEwMDApLCAneXl5eS1tbS1kZCcpOwogICAgX3RoaXMuc3RyZWV0TmFtZSA9IF90aGlzLiRzdG9yZS5zdGF0ZS51c2VyLnN0cmVldE5hbWU7CiAgICBfdGhpcy5zdHJlZXROdW1iZXIgPSBfdGhpcy4kc3RvcmUuc3RhdGUudXNlci5zdHJlZXROdW1iZXI7CiAgICBfdGhpcy56aXBjb2RlID0gX3RoaXMuJHN0b3JlLnN0YXRlLnVzZXIuemlwY29kZTsKICAgIF90aGlzLmNpdHkgPSBfdGhpcy4kc3RvcmUuc3RhdGUudXNlci5jaXR5OwogICAgX3RoaXMuY291bnRyeSA9IF90aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmNvdW50cnk7CiAgICBfdGhpcy5jVXNlciA9IF90aGlzLiRzdG9yZS5zdGF0ZS51c2VyOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFByb2ZpbGUsIFt7CiAgICBrZXk6ICJwdXRVc2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcHV0VXNlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgYWNjZXNzVG9rZW4sIHJlc3VsdCwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRhdXRoLmdldFRva2VuU2lsZW50bHkoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coYWNjZXNzVG9rZW4pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goZW5jb2RlVVJJKCIvYXBpL3VzZXIvdXBkYXRlIiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiUFVUIiwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIiArIGFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHRoaXMuJGF1dGgudXNlci5zdWIsCiAgICAgICAgICAgICAgICAgICAgZW1haWw6IHRoaXMuJGF1dGgudXNlci5lbWFpbCwKICAgICAgICAgICAgICAgICAgICBmaXJzdG5hbWU6IHRoaXMuY1VzZXIuZmlyc3RuYW1lLAogICAgICAgICAgICAgICAgICAgIGxhc3RuYW1lOiB0aGlzLmNVc2VyLmxhc3RuYW1lLAogICAgICAgICAgICAgICAgICAgIGJpcnRoZGF0ZTogcGFyc2VJbnQoKG5ldyBEYXRlKHRoaXMuY1VzZXIuYmlydGhkYXRlKS5nZXRUaW1lKCkgLyAxMDAwKS50b0ZpeGVkKDApKSwKICAgICAgICAgICAgICAgICAgICBzdHJlZXROYW1lOiB0aGlzLmNVc2VyLnN0cmVldE5hbWUsCiAgICAgICAgICAgICAgICAgICAgc3RyZWV0TnVtYmVyOiB0aGlzLmNVc2VyLnN0cmVldE51bWJlciwKICAgICAgICAgICAgICAgICAgICB6aXBjb2RlOiB0aGlzLmNVc2VyLnppcGNvZGUsCiAgICAgICAgICAgICAgICAgICAgY2l0eTogdGhpcy5jVXNlci5jaXR5LAogICAgICAgICAgICAgICAgICAgIGNvdW50cnk6IHRoaXMuY1VzZXIuY291bnRyeQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHB1dFVzZXIoKSB7CiAgICAgICAgcmV0dXJuIF9wdXRVc2VyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBwdXRVc2VyOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gUHJvZmlsZTsKfShWdWUpOwoKZXhwb3J0IHsgUHJvZmlsZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/views/Profile.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;AA4GA,SAAS,GAAT,QAAoB,wBAApB;AAEA,OAAO,UAAP,MAAuB,YAAvB;;IAGqB,O;;;;;AAIjB,qBAAA;AAAA;;AAAA;;AACE;AAHI,UAAA,KAAA,GAAmB,IAAnB;AAOA,UAAA,SAAA,GAAY,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,SAAnC;AACA,UAAA,QAAA,GAAW,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,QAAlC;AACA,UAAA,KAAA,GAAQ,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,KAA/B;AACA,UAAA,SAAA,GAAY,UAAU,CAAC,IAAI,IAAJ,CAAS,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,SAAvB,GAAiC,IAA1C,CAAD,EAAiD,YAAjD,CAAtB;AACA,UAAA,UAAA,GAAa,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,UAApC;AACA,UAAA,YAAA,GAAe,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,YAAtC;AACA,UAAA,OAAA,GAAU,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,OAAjC;AACA,UAAA,IAAA,GAAO,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,IAA9B;AACA,UAAA,OAAA,GAAU,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,OAAjC;AAXJ,UAAK,KAAL,GAAa,MAAK,MAAL,CAAY,KAAZ,CAAkB,IAA/B;AAFF;AAGD;;;;;;;;;;;;uBAayB,KAAK,KAAL,CAAW,gBAAX,E;;;AAApB,gBAAA,W;AACN,gBAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;;uBACqB,KAAK,CAAC,SAAS,CAAC,kBAAD,CAAV,EAAgC;AACxD,kBAAA,MAAM,EAAE,KADgD;AAExD,kBAAA,OAAO,EAAE;AACP,oBAAA,aAAa,EAAE,YAAY;AADpB,mBAF+C;AAKxD,kBAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe;AAAE,oBAAA,MAAM,EAAE,KAAK,KAAL,CAAW,IAAX,CAAgB,GAA1B;AACG,oBAAA,KAAK,EAAE,KAAK,KAAL,CAAW,IAAX,CAAgB,KAD1B;AAEG,oBAAA,SAAS,EAAE,KAAK,KAAL,CAAW,SAFzB;AAGG,oBAAA,QAAQ,EAAE,KAAK,KAAL,CAAW,QAHxB;AAIG,oBAAA,SAAS,EAAE,QAAQ,CAAC,CAAC,IAAI,IAAJ,CAAS,KAAK,KAAL,CAAW,SAApB,EAA+B,OAA/B,KAA2C,IAA5C,EAAkD,OAAlD,CAA0D,CAA1D,CAAD,CAJtB;AAKG,oBAAA,UAAU,EAAE,KAAK,KAAL,CAAW,UAL1B;AAMG,oBAAA,YAAY,EAAE,KAAK,KAAL,CAAW,YAN5B;AAOG,oBAAA,OAAO,EAAE,KAAK,KAAL,CAAW,OAPvB;AAQG,oBAAA,IAAI,EAAE,KAAK,KAAL,CAAW,IARpB;AASG,oBAAA,OAAO,EAAE,KAAK,KAAL,CAAW;AATvB,mBAAf;AALkD,iBAAhC,C;;;AAApB,gBAAA,M;;uBAgBa,MAAM,CAAC,IAAP,E;;;AAAb,gBAAA,I;AACN,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;;;;;;;;;;;;;;;;;;;EAvCmC,G;;SAAhB,O","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue } from \"vue-property-decorator\";\nimport store from \"../store\";\nimport dateFormat from \"dateformat\";\nimport { IUserType } from \"@/types/UserType\";\n\nexport default class Profile extends Vue {\n\n  private cUser: IUserType = null\n\n    constructor () {\n      super()\n      this.cUser = this.$store.state.user\n  }\n\n  private firstname = this.$store.state.user.firstname\n  private lastname = this.$store.state.user.lastname\n  private email = this.$store.state.user.email\n  private birthdate = dateFormat(new Date(this.$store.state.user.birthdate*1000),'yyyy-mm-dd')\n  private streetName = this.$store.state.user.streetName\n  private streetNumber = this.$store.state.user.streetNumber\n  private zipcode = this.$store.state.user.zipcode\n  private city = this.$store.state.user.city\n  private country = this.$store.state.user.country\n\n  async putUser() {\n  const accessToken = await this.$auth.getTokenSilently();\n  console.log(accessToken);\n  const result = await fetch(encodeURI(\"/api/user/update\"), {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Bearer \" + accessToken,\n    },\n    body: JSON.stringify({ userId: this.$auth.user.sub,\n                            email: this.$auth.user.email,\n                            firstname: this.cUser.firstname,\n                            lastname: this.cUser.lastname,\n                            birthdate: parseInt((new Date(this.cUser.birthdate).getTime() / 1000).toFixed(0)),\n                            streetName: this.cUser.streetName,\n                            streetNumber: this.cUser.streetNumber,\n                            zipcode: this.cUser.zipcode,\n                            city: this.cUser.city,\n                            country: this.cUser.country })\n  });\n  const data = await result.json();\n  console.log(data);\n\n}\n}\n"],"sourceRoot":""}]}