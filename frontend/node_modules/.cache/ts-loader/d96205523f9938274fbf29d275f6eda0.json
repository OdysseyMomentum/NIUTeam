{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/thread-loader/dist/cjs.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--14-3!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/Details.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/Details.vue","mtime":1605398719849},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/Details.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport 'leaflet/dist/leaflet.css'\nimport Chart from '@/components/plots/Chart.vue'\nimport Map from '@/components/Map.vue'\nimport Weather from '@/components/Weather.vue'\nimport { Component, Vue } from 'vue-property-decorator'\nimport { IDocumentMeta, IResourceType } from '@/types/ResourceType'\nimport { IObjectType } from '@/types/ObjectType'\nimport { ISensorDataType } from '@/types/SensorDataType'\n\n@Component({\n  components: {\n    Map,\n    Weather,\n    Chart\n  }\n})\nexport default class Details extends Vue {\n  private newUserEmail = ''\n  private objectResources: IResourceType[]\n  private object: IObjectType\n  private rerenderKey = 0\n  public loaded = false\n\n  private endTime = new Date()\n  private startTime = new Date(Date.now() - 43200 * 1000)\n  private maxDatetime = new Date()\n\n  constructor () {\n    super()\n    this.objectResources = this.$store.state.resources\n    this.object = this.$store.state.object\n  }\n\n  private successUserAdd () {\n    this.$buefy.toast.open({\n      message: 'User ' + this.newUserEmail + ' added!',\n      type: 'is-success',\n      position: 'is-bottom'\n    })\n  }\n\n  private async addUser () {\n    const accessToken = await this.$auth.getTokenSilently({})\n    fetch(encodeURI('/api/user/addToObject'), {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + accessToken\n      },\n      body: JSON.stringify({\n        object: {\n          uoi: this.object.uoi\n        },\n        user: {\n          email: this.newUserEmail\n        }\n      })\n    }).then(async response => {\n      const data = await response.json() as JSON\n      console.log(data)\n      this.successUserAdd()\n    })\n      .catch(error => {\n        console.error('There was an error!', error)\n      })\n  }\n\n  private async getSensorData (resourceId: number, startTime: Date, endTime: Date) {\n    this.$store.state.cachedSensorID = resourceId\n    const accessToken = await this.$auth.getTokenSilently({})\n    fetch(encodeURI('/api/telemetry/get'), {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + accessToken\n      },\n      body: JSON.stringify({\n        object: {\n          uoi: this.object.uoi\n        },\n        resource: {\n          resourceId: resourceId\n        },\n        range: {\n          begin: Math.round(startTime.getTime() / 1000),\n          end: Math.round(endTime.getTime() / 1000)\n        }\n\n      })\n    }).then(async response => {\n      const sensorData: ISensorDataType[] = await response.json() as ISensorDataType[]\n\n      this.$store.state.chartData.timestamp = sensorData.map(i => i.timestamp * 1000)\n      this.$store.state.chartData.altitude = sensorData.map(i => i.altitude)\n      this.$store.state.chartData.co2_conc = sensorData.map(i => i.co2_conc)\n      this.$store.state.chartData.humidity = sensorData.map(i => i.humidity)\n      this.$store.state.chartData.illuminance = sensorData.map(i => i.illuminance)\n      this.$store.state.chartData.motion_count = sensorData.map(i => i.motion_count)\n      this.$store.state.chartData.pressure = sensorData.map(i => i.pressure)\n      this.$store.state.chartData.sound_level = sensorData.map(i => i.sound_level)\n      this.$store.state.chartData.temperature = sensorData.map(i => i.temperature)\n      this.$store.state.chartData.voc_conc = sensorData.map(i => i.voc_conc)\n      this.loaded = true\n      this.rerenderKey += 1\n    })\n      .catch(error => {\n        console.error('There was an error!', error)\n      })\n  }\n\n  private async startDownload (resourceId: string) {\n    console.log('Downloading: ' + resourceId)\n    const accessToken = await this.$auth.getTokenSilently({})\n    fetch(encodeURI('/api/resource/get'), {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + accessToken\n      },\n      body: JSON.stringify({\n        object: {\n          uoi: this.object.uoi\n        },\n        resource: {\n          resourceId: resourceId\n        }\n\n      })\n    }).then(async response => {\n      const resource: IResourceType = await response.json() as IResourceType\n      const resourceMeta = resource.meta as IDocumentMeta\n\n      if (resourceMeta.access !== undefined) {\n        if (resourceMeta.filetype === '.jpg' ||\n          resourceMeta.filetype === '.jpeg' ||\n          resourceMeta.filetype === '.png' ||\n          resourceMeta.filetype === '.pdf' ||\n          resourceMeta.filetype === '.svg') {\n          window.open(resourceMeta.access, '_blank')\n        } else {\n          window.open(resourceMeta.access)\n        }\n      }\n    })\n      .catch(error => {\n        console.error('There was an error!', error)\n      })\n  }\n\n  private getDocuments (): IResourceType[] {\n    return this.objectResources.filter(r => (r.resourceType === 'DOCUMENT' && r.meta != null))\n  }\n\n  private getSensors (): IResourceType[] {\n    return this.objectResources.filter(r => (r.resourceType === 'SENSOR'))\n  }\n}\n"],"sourceRoot":""}]}