{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--13-2!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/AppHeader.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/AppHeader.vue","mtime":1605346739157},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2VyZmFsay93c19maWxlZGdyL2ZpbGVkZ3Itc3RyZWFtcy1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKCnZhciBBcHBIZWFkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoQXBwSGVhZGVyLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBcHBIZWFkZXIpOwoKICBmdW5jdGlvbiBBcHBIZWFkZXIoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFwcEhlYWRlcik7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgLy8gTWFraW5nIHRoZSBwcm9wZXJ0eSByZWFjdGl2ZSB0byBnZXQgcmlkIG9mIHRoZSB3YXJuaW5nCgogICAgX3RoaXMubmF2aWdhdGlvbiA9IHt9OwogICAgX3RoaXMuaXNQdWJsaWMgPSB0cnVlOwogICAgX3RoaXMubG9nbyA9IHJlcXVpcmUoJ0AvYXNzZXRzL2ZpbGVkZ3ItbG9nby5wbmcnKTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhBcHBIZWFkZXIsIFt7CiAgICBrZXk6ICJtb3VudGVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICB0aGlzLmdldFVzZXIoKTsKICAgICAgdGhpcy5saXN0T2JqZWN0cygpOwogICAgfQogIH0sIHsKICAgIGtleTogImxvZ2luIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dpbigpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9jYW1lbGNhc2UKICAgICAgdGhpcy4kYXV0aC5sb2dpbldpdGhSZWRpcmVjdCh7CiAgICAgICAgYXBwU3RhdGU6IHsKICAgICAgICAgIHRhcmdldFVybDogJy9kYXNoYm9hcmQnCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJsb2dvdXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ291dCgpIHsKICAgICAgdGhpcy4kYXV0aC5sb2dvdXQoewogICAgICAgIHJldHVyblRvOiB3aW5kb3cubG9jYXRpb24ub3JpZ2luCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFVzZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRVc2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgICAgdmFyIGFjY2Vzc1Rva2VuOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhY2Nlc3NUb2tlbik7CiAgICAgICAgICAgICAgICBmZXRjaChlbmNvZGVVUkkoJy9hcGkvdXNlci9nZXQnKSwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIGFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUudXNlciA9IGRhdGE7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIlRoZXJlIHdhcyBhbiBlcnJvciEiLCBlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0VXNlcigpIHsKICAgICAgICByZXR1cm4gX2dldFVzZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFVzZXI7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJsaXN0T2JqZWN0cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2xpc3RPYmplY3RzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgYWNjZXNzVG9rZW4sIHJlc3VsdCwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRhdXRoLmdldFRva2VuU2lsZW50bHkoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaChlbmNvZGVVUkkoJy9hcGkvb2JqZWN0L2xpc3QnKSwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIGFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUub2JqZWN0cyA9IHJlc3BvbnNlOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gbGlzdE9iamVjdHMoKSB7CiAgICAgICAgcmV0dXJuIF9saXN0T2JqZWN0cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gbGlzdE9iamVjdHM7CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBBcHBIZWFkZXI7Cn0oVnVlKTsKCkFwcEhlYWRlciA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudF0sIEFwcEhlYWRlcik7CmV4cG9ydCBkZWZhdWx0IEFwcEhlYWRlcjs="},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/AppHeader.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;AAgDA,SAAQ,SAAR,EAAmB,GAAnB,QAA6B,wBAA7B;;AAMA,IAAqB,SAArB;AAAA;;AAAA;;AAAA,uBAAA;AAAA;;AAAA;;0CAAA,CACE;;AACQ,UAAA,UAAA,GAAkB,EAAlB;AAEA,UAAA,QAAA,GAAW,IAAX;AACR,UAAA,IAAA,GAAO,OAAO,CAAC,2BAAD,CAAd;AALF;AAsDC;;AAtDD;AAAA;AAAA,8BAOiB;AACb,WAAK,OAAL;AACA,WAAK,WAAL;AACD;AAVH;AAAA;AAAA,4BAYO;AACH;AACA,WAAK,KAAL,CAAW,iBAAX,CAA6B;AAAC,QAAA,QAAQ,EAAE;AAAC,UAAA,SAAS,EAAE;AAAZ;AAAX,OAA7B;AACD;AAfH;AAAA;AAAA,6BAiBQ;AACJ,WAAK,KAAL,CAAW,MAAX,CAAkB;AAChB,QAAA,QAAQ,EAAE,MAAM,CAAC,QAAP,CAAgB;AADV,OAAlB;AAGD;AArBH;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwB8B,KAAK,KAAL,CAAW,gBAAX,EAxB9B;;AAAA;AAwBU,gBAAA,WAxBV;AAyBI,gBAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AAEA,gBAAA,KAAK,CAAC,SAAS,CAAC,eAAD,CAAV,EAA6B;AAChC,kBAAA,MAAM,EAAE,MADwB;AAEhC,kBAAA,OAAO,EAAE;AACP,oBAAA,aAAa,EAAE,YAAY;AADpB;AAFuB,iBAA7B,CAAL,CAKG,IALH;AAAA,qFAKQ,iBAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACwB,QAAQ,CAAC,IAAT,EADxB;;AAAA;AACA,4BAAA,IADA;AAEN,4BAAA,MAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,IAAlB,GAAyB,IAAzB;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALR;;AAAA;AAAA;AAAA;AAAA,qBASG,KATH,CASS,UAAA,KAAK,EAAG;AACb,kBAAA,OAAO,CAAC,KAAR,CAAc,qBAAd,EAAqC,KAArC;AACD,iBAXH;;AA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0C8B,KAAK,KAAL,CAAW,gBAAX,EA1C9B;;AAAA;AA0CU,gBAAA,WA1CV;AAAA;AAAA,uBA4CyB,KAAK,CAAC,SAAS,CAAC,kBAAD,CAAV,EAAgC;AACxD,kBAAA,MAAM,EAAE,MADgD;AAExD,kBAAA,OAAO,EAAE;AACP,oBAAA,aAAa,EAAE,YAAY;AADpB;AAF+C,iBAAhC,CA5C9B;;AAAA;AA4CU,gBAAA,MA5CV;AAAA;AAAA,uBAkD0C,MAAM,CAAC,IAAP,EAlD1C;;AAAA;AAkDU,gBAAA,QAlDV;AAmDI,qBAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,GAA4B,QAA5B;;AAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAuC,GAAvC,CAAA;;AAAqB,SAAS,GAAA,UAAA,CAAA,CAD7B,SAC6B,CAAA,EAAT,SAAS,CAAT;eAAA,S","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {Component, Vue} from 'vue-property-decorator'\r\nimport {IUserType} from '@/types/UserType'\r\nimport {IObjectType} from '@/types/ObjectType'\r\nimport {error} from \"vue-i18n/src/util\";\r\n\r\n@Component\r\nexport default class AppHeader extends Vue {\r\n  // Making the property reactive to get rid of the warning\r\n  private navigation: any = {}\r\n\r\n  private isPublic = true\r\n  logo = require('@/assets/filedgr-logo.png')\r\n\r\n  private mounted() {\r\n    this.getUser()\r\n    this.listObjects()\r\n  }\r\n\r\n  login() {\r\n    // eslint-disable-next-line @typescript-eslint/camelcase\r\n    this.$auth.loginWithRedirect({appState: {targetUrl: '/dashboard'}})\r\n  }\r\n\r\n  logout() {\r\n    this.$auth.logout({\r\n      returnTo: window.location.origin\r\n    })\r\n  }\r\n\r\n  async getUser() {\r\n    const accessToken = await this.$auth.getTokenSilently()\r\n    console.log(accessToken);\r\n    \r\n    fetch(encodeURI('/api/user/get'), {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: 'Bearer ' + accessToken\r\n      }\r\n    }).then(async response => {\r\n      const data: IUserType = await response.json() as IUserType\r\n      this.$store.state.user = data\r\n    })\r\n      .catch(error => {\r\n        console.error(\"There was an error!\", error)\r\n      })\r\n  }\r\n\r\n  async listObjects() {\r\n    const accessToken = await this.$auth.getTokenSilently()\r\n\r\n    const result = await fetch(encodeURI('/api/object/list'), {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: 'Bearer ' + accessToken\r\n      }\r\n    })\r\n    const response: IObjectType[] = await result.json() as IObjectType[]\r\n    this.$store.state.objects = response\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}]}