{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/thread-loader/dist/cjs.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js??ref--14-3!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/AppHeader.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/AppHeader.vue","mtime":1605397925219},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZXJmYWxrL3dzX2ZpbGVkZ3IvZmlsZWRnci1zdHJlYW1zLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2VyZmFsay93c19maWxlZGdyL2ZpbGVkZ3Itc3RyZWFtcy1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9lcmZhbGsvd3NfZmlsZWRnci9maWxlZGdyLXN0cmVhbXMtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKCnZhciBBcHBIZWFkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoQXBwSGVhZGVyLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBcHBIZWFkZXIpOwoKICBmdW5jdGlvbiBBcHBIZWFkZXIoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFwcEhlYWRlcik7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgLy8gTWFraW5nIHRoZSBwcm9wZXJ0eSByZWFjdGl2ZSB0byBnZXQgcmlkIG9mIHRoZSB3YXJuaW5nCgogICAgX3RoaXMubmF2aWdhdGlvbiA9IHt9OwogICAgX3RoaXMuaXNQdWJsaWMgPSB0cnVlOwogICAgX3RoaXMubG9nbyA9IHJlcXVpcmUoJ0AvYXNzZXRzL2ZpbGVkZ3ItbG9nby5wbmcnKTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhBcHBIZWFkZXIsIFt7CiAgICBrZXk6ICJtb3VudGVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICB0aGlzLmdldFVzZXIoKTsKICAgICAgdGhpcy5saXN0T2JqZWN0cygpOwogICAgfQogIH0sIHsKICAgIGtleTogImxvZ2luIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dpbigpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9jYW1lbGNhc2UKICAgICAgdGhpcy4kYXV0aC5sb2dpbldpdGhSZWRpcmVjdCh7CiAgICAgICAgYXBwU3RhdGU6IHsKICAgICAgICAgIHRhcmdldFVybDogJy9kYXNoYm9hcmQnCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJsb2dvdXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ291dCgpIHsKICAgICAgdGhpcy4kYXV0aC5sb2dvdXQoewogICAgICAgIHJldHVyblRvOiB3aW5kb3cubG9jYXRpb24ub3JpZ2luCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFVzZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRVc2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgICAgdmFyIGFjY2Vzc1Rva2VuOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KHt9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgICAgIGZldGNoKGVuY29kZVVSSSgnL2FwaS91c2VyL2dldCcpLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgYWNjZXNzVG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLiRzdG9yZS5zdGF0ZS51c2VyID0gZGF0YTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignVGhlcmUgd2FzIGFuIGVycm9yIScsIGVycm9yKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRVc2VyKCkgewogICAgICAgIHJldHVybiBfZ2V0VXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0VXNlcjsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImxpc3RPYmplY3RzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfbGlzdE9iamVjdHMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBhY2Nlc3NUb2tlbiwgcmVzdWx0LCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGF1dGguZ2V0VG9rZW5TaWxlbnRseSh7fSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGFjY2Vzc1Rva2VuID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goZW5jb2RlVVJJKCcvYXBpL29iamVjdC9saXN0JyksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcgKyBhY2Nlc3NUb2tlbgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLm9iamVjdHMgPSByZXNwb25zZTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGxpc3RPYmplY3RzKCkgewogICAgICAgIHJldHVybiBfbGlzdE9iamVjdHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGxpc3RPYmplY3RzOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gQXBwSGVhZGVyOwp9KFZ1ZSk7CgpBcHBIZWFkZXIgPSBfX2RlY29yYXRlKFtDb21wb25lbnRdLCBBcHBIZWFkZXIpOwpleHBvcnQgZGVmYXVsdCBBcHBIZWFkZXI7"},{"version":3,"sources":["/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/AppHeader.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;AAgDA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;;AAMA,IAAqB,SAArB;AAAA;;AAAA;;AAAA,uBAAA;AAAA;;AAAA;;0CAAA,CACE;;AACQ,UAAA,UAAA,GAAkB,EAAlB;AAEA,UAAA,QAAA,GAAW,IAAX;AACR,UAAA,IAAA,GAAO,OAAO,CAAC,2BAAD,CAAd;AALF;AAqDC;;AArDD;AAAA;AAAA,8BAOiB;AACb,WAAK,OAAL;AACA,WAAK,WAAL;AACD;AAVH;AAAA;AAAA,4BAYO;AACH;AACA,WAAK,KAAL,CAAW,iBAAX,CAA6B;AAAE,QAAA,QAAQ,EAAE;AAAE,UAAA,SAAS,EAAE;AAAb;AAAZ,OAA7B;AACD;AAfH;AAAA;AAAA,6BAiBQ;AACJ,WAAK,KAAL,CAAW,MAAX,CAAkB;AAChB,QAAA,QAAQ,EAAE,MAAM,CAAC,QAAP,CAAgB;AADV,OAAlB;AAGD;AArBH;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwB8B,KAAK,KAAL,CAAW,gBAAX,CAA4B,EAA5B,CAxB9B;;AAAA;AAwBU,gBAAA,WAxBV;AAyBI,gBAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AAEA,gBAAA,KAAK,CAAC,SAAS,CAAC,eAAD,CAAV,EAA6B;AAChC,kBAAA,MAAM,EAAE,MADwB;AAEhC,kBAAA,OAAO,EAAE;AACP,oBAAA,aAAa,EAAE,YAAY;AADpB;AAFuB,iBAA7B,CAAL,CAKG,IALH;AAAA,qFAKQ,iBAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACwB,QAAQ,CAAC,IAAT,EADxB;;AAAA;AACA,4BAAA,IADA;AAEN,4BAAA,MAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,IAAlB,GAAyB,IAAzB;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALR;;AAAA;AAAA;AAAA;AAAA,qBASG,KATH,CASS,UAAA,KAAK,EAAG;AACb,kBAAA,OAAO,CAAC,KAAR,CAAc,qBAAd,EAAqC,KAArC;AACD,iBAXH;;AA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0C8B,KAAK,KAAL,CAAW,gBAAX,CAA4B,EAA5B,CA1C9B;;AAAA;AA0CU,gBAAA,WA1CV;AAAA;AAAA,uBA4CyB,KAAK,CAAC,SAAS,CAAC,kBAAD,CAAV,EAAgC;AACxD,kBAAA,MAAM,EAAE,MADgD;AAExD,kBAAA,OAAO,EAAE;AACP,oBAAA,aAAa,EAAE,YAAY;AADpB;AAF+C,iBAAhC,CA5C9B;;AAAA;AA4CU,gBAAA,MA5CV;AAAA;AAAA,uBAkD0C,MAAM,CAAC,IAAP,EAlD1C;;AAAA;AAkDU,gBAAA,QAlDV;AAmDI,qBAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,GAA4B,QAA5B;;AAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAuC,GAAvC,CAAA;;AAAqB,SAAS,GAAA,UAAA,CAAA,CAD7B,SAC6B,CAAA,EAAT,SAAS,CAAT;eAAA,S","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { IUserType } from '@/types/UserType'\r\nimport { IObjectType } from '@/types/ObjectType'\r\nimport { error } from 'vue-i18n/src/util'\r\n\r\n@Component\r\nexport default class AppHeader extends Vue {\r\n  // Making the property reactive to get rid of the warning\r\n  private navigation: any = {}\r\n\r\n  private isPublic = true\r\n  logo = require('@/assets/filedgr-logo.png')\r\n\r\n  private mounted () {\r\n    this.getUser()\r\n    this.listObjects()\r\n  }\r\n\r\n  login () {\r\n    // eslint-disable-next-line @typescript-eslint/camelcase\r\n    this.$auth.loginWithRedirect({ appState: { targetUrl: '/dashboard' } })\r\n  }\r\n\r\n  logout () {\r\n    this.$auth.logout({\r\n      returnTo: window.location.origin\r\n    })\r\n  }\r\n\r\n  async getUser () {\r\n    const accessToken = await this.$auth.getTokenSilently({})\r\n    console.log(accessToken)\r\n\r\n    fetch(encodeURI('/api/user/get'), {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: 'Bearer ' + accessToken\r\n      }\r\n    }).then(async response => {\r\n      const data: IUserType = await response.json() as IUserType\r\n      this.$store.state.user = data\r\n    })\r\n      .catch(error => {\r\n        console.error('There was an error!', error)\r\n      })\r\n  }\r\n\r\n  async listObjects () {\r\n    const accessToken = await this.$auth.getTokenSilently({})\r\n\r\n    const result = await fetch(encodeURI('/api/object/list'), {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: 'Bearer ' + accessToken\r\n      }\r\n    })\r\n    const response: IObjectType[] = await result.json() as IObjectType[]\r\n    this.$store.state.objects = response\r\n  }\r\n}\r\n"],"sourceRoot":""}]}