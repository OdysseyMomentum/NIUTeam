{"remainingRequest":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/plots/LineChart.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/src/components/plots/LineChart.vue","mtime":1605127685906},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erfalk/ws_filedgr/filedgr-streams-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnCgpAQ29tcG9uZW50KHt9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBMaW5lQ2hhcnQgZXh0ZW5kcyBWdWUgewogIHByaXZhdGUgZGF0YSA9IFsKICAgIHsgdGVtcDogMTUsIGhyOiAwIH0sCiAgICB7IHRlbXA6IDE4LCBocjogNiB9LAogICAgeyB0ZW1wOiAyNSwgaHI6IDkgfSwKICAgIHsgdGVtcDogMTgsIGhyOiAxMSB9LAogICAgeyB0ZW1wOiAxNiwgaHI6IDEyIH0sCiAgICB7IHRlbXA6IDE5LCBocjogMTMgfSwKICAgIHsgdGVtcDogMTgsIGhyOiAxNCB9LAogICAgeyB0ZW1wOiAxOSwgaHI6IDE1IH0sCiAgICB7IHRlbXA6IDE1LCBocjogMTYgfQogIF07CgogIHByaXZhdGUgc3ZnOiBhbnk7CiAgcHJpdmF0ZSBkPzogbnVtYmVyOwogIHByaXZhdGUgbWFyZ2luID0gNTA7CiAgcHJpdmF0ZSB3aWR0aCA9IDUwMDsKICBwcml2YXRlIGhlaWdodCA9IDI1MAoKICBwcml2YXRlIGNyZWF0ZVN2ZyAoKTogdm9pZCB7CiAgICB0aGlzLnN2ZyA9IGQzLnNlbGVjdCgnI2xpbmVDaGFydCcpCiAgICAgIC5hcHBlbmQoJ3N2ZycpCiAgICAgIC5hdHRyKCd3aWR0aCcsIHRoaXMud2lkdGggKyAodGhpcy5tYXJnaW4gKiAyKSkKICAgICAgLmF0dHIoJ2hlaWdodCcsIHRoaXMuaGVpZ2h0ICsgKHRoaXMubWFyZ2luICogMikpCiAgICAgIC5hcHBlbmQoJ2cnKQogICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgdGhpcy5tYXJnaW4gKyAnLCcgKyB0aGlzLm1hcmdpbiArICcpJykKICB9CgogIHByaXZhdGUgZHJhd1Bsb3QgKGlucHV0RGF0YTogYW55W10pOiB2b2lkIHsKICAgIGNvbnN0IHRlbXAgPSBpbnB1dERhdGEubWFwKGl0ZW0gPT4gcGFyc2VJbnQoaXRlbS50ZW1wKSkKICAgIGNvbnN0IGhyID0gaW5wdXREYXRhLm1hcChpdGVtID0+IGl0ZW0uaHIpCiAgICBjb25zdCBwcmljZU1pbiA9IE1hdGgubWluKC4uLnRlbXApCiAgICBjb25zdCBwcmljZU1heCA9IE1hdGgubWF4KC4uLnRlbXApCgogICAgLy8gQWRkIFggYXhpcwogICAgY29uc3QgeCA9IGQzLnNjYWxlTGluZWFyKCkKICAgICAgLmRvbWFpbihbMCwgMThdKQogICAgICAucmFuZ2UoWzAsIHRoaXMud2lkdGhdKQogICAgdGhpcy5zdmcuYXBwZW5kKCdnJykKICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwnICsgdGhpcy5oZWlnaHQgKyAnKScpCiAgICAgIC5jYWxsKGQzLmF4aXNCb3R0b20oeCkudGlja0Zvcm1hdChkMy5mb3JtYXQoJ2QnKSkpCgogICAgLy8gQWRkIFkgYXhpcwogICAgY29uc3QgeSA9IGQzLnNjYWxlTGluZWFyKCkKICAgICAgLmRvbWFpbihbMCwgcHJpY2VNYXhdKQogICAgICAucmFuZ2UoW3RoaXMuaGVpZ2h0LCAwXSkKICAgIHRoaXMuc3ZnLmFwcGVuZCgnZycpCiAgICAgIC5jYWxsKGQzLmF4aXNMZWZ0KHkpKQoKICAgIC8vIEFkZCBsaW5lCiAgICB0aGlzLnN2Zy5hcHBlbmQoJ3BhdGgnKQogICAgICAuZGF0dW0oaW5wdXREYXRhKQogICAgICAuYXR0cignZmlsbCcsICdub25lJykKICAgICAgLmF0dHIoJ3N0cm9rZScsICdibGFjaycpCiAgICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCAyKQogICAgICAuYXR0cignZCcsIGQzLmxpbmUoKQogICAgICAgIC8vIC5jdXJ2ZShkMy5jdXJ2ZU5hdHVyYWwpCiAgICAgICAgLngoZnVuY3Rpb24gKGQ6IGFueSkgeyByZXR1cm4geChkLmhyKSB9KQogICAgICAgIC55KGZ1bmN0aW9uIChkOiBhbnkpIHsgcmV0dXJuIHkoZC50ZW1wKSB9KQogICAgICApCgogICAgLy8gQWRkIGRvdHMKICAgIC8vIGNvbnN0IGRvdHMgPSB0aGlzLnN2Zy5hcHBlbmQoJ2cnKQogICAgLy8gZG90cy5zZWxlY3RBbGwoJ2RvdCcpCiAgICAvLyAgIC5kYXRhKGlucHV0RGF0YSkKICAgIC8vICAgLmVudGVyKCkKICAgIC8vICAgLmFwcGVuZCgnY2lyY2xlJykKICAgIC8vICAgLmF0dHIoJ2N4JywgKGQ6IHsgaHI6IGFueX0pID0+IHgoZC5ocikpCiAgICAvLyAgIC5hdHRyKCdjeScsIChkOiB7IHRlbXA6IGFueX0pID0+IHkoZC50ZW1wKSkKICAgIC8vICAgLmF0dHIoJ3InLCAyKQogICAgLy8gICAvLyAuc3R5bGUoJ29wYWNpdHknLCAwLjUpCgogICAgdGhpcy5zdmcuYXBwZW5kKCd0ZXh0JykKICAgICAgLmF0dHIoJ3gnLCAodGhpcy53aWR0aCAvIDIpKQogICAgICAuYXR0cigneScsIDAgLSAodGhpcy5tYXJnaW4gLyAyKSkKICAgICAgLmF0dHIoJ3RleHQtYW5jaG9yJywgJ21pZGRsZScpCiAgICAgIC50ZXh0KCdUZW1wZXJhdHVyZScpCgogICAgICB0aGlzLnN2Zy5hcHBlbmQoInRleHQiKQogICAgLmF0dHIoInRleHQtYW5jaG9yIiwgImVuZCIpCiAgICAuYXR0cigieCIsIHRoaXMud2lkdGgpCiAgICAuYXR0cigieSIsIHRoaXMuaGVpZ2h0IC0gNikKICAgIC50ZXh0KCJoIik7CgogICAgdGhpcy5zdmcuYXBwZW5kKCJ0ZXh0IikKICAgIC5hdHRyKCJ0ZXh0LWFuY2hvciIsICJlbmQiKQogICAgLmF0dHIoInkiLCA2KQogICAgLmF0dHIoIngiLCAzMCkKICAgIC5hdHRyKCJkeSIsICIuNzVlbSIpCiAgICAudGV4dCgiwrBDIik7CiAgfQoKICBwcml2YXRlIGNsZWFyUGxvdCAoKSB7CiAgICBkMy5zZWxlY3QoJ3N2ZycpLnJlbW92ZSgpCiAgfQoKICAvLyBwcml2YXRlIHJlRHJhdyAoKTogdm9pZCB7CiAgLy8gICB0aGlzLmNsZWFyUGxvdCgpCiAgLy8gICB0aGlzLmNyZWF0ZVN2ZygpCiAgLy8gICB0aGlzLmRyYXdQbG90KAogIC8vICAgICBbCiAgLy8gICAgICAgeyB0ZW1wOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksIGhyOiAyMDA5IH0sCiAgLy8gICAgICAgeyB0ZW1wOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksIGhyOiAyMDEwIH0sCiAgLy8gICAgICAgeyB0ZW1wOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksIGhyOiAyMDEyIH0sCiAgLy8gICAgICAgeyB0ZW1wOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksIGhyOiAyMDE0IH0sCiAgLy8gICAgICAgeyB0ZW1wOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksIGhyOiAyMDE2IH0sCiAgLy8gICAgICAgeyB0ZW1wOiA0MDAwMCAqIE1hdGgucmFuZG9tKCksIGhyOiAyMDE3IH0KICAvLyAgICAgXQogIC8vICAgKQogIC8vIH0KCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLmNyZWF0ZVN2ZygpCiAgICB0aGlzLmRyYXdQbG90KHRoaXMuZGF0YSkKICB9Cn0K"},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/components/plots","sourcesContent":["<template>\n<div class=\"chart\">\n  <figure id=\"lineChart\"></figure>\n</div>\n\n</template>\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport * as d3 from 'd3'\n\n@Component({})\nexport default class LineChart extends Vue {\n  private data = [\n    { temp: 15, hr: 0 },\n    { temp: 18, hr: 6 },\n    { temp: 25, hr: 9 },\n    { temp: 18, hr: 11 },\n    { temp: 16, hr: 12 },\n    { temp: 19, hr: 13 },\n    { temp: 18, hr: 14 },\n    { temp: 19, hr: 15 },\n    { temp: 15, hr: 16 }\n  ];\n\n  private svg: any;\n  private d?: number;\n  private margin = 50;\n  private width = 500;\n  private height = 250\n\n  private createSvg (): void {\n    this.svg = d3.select('#lineChart')\n      .append('svg')\n      .attr('width', this.width + (this.margin * 2))\n      .attr('height', this.height + (this.margin * 2))\n      .append('g')\n      .attr('transform', 'translate(' + this.margin + ',' + this.margin + ')')\n  }\n\n  private drawPlot (inputData: any[]): void {\n    const temp = inputData.map(item => parseInt(item.temp))\n    const hr = inputData.map(item => item.hr)\n    const priceMin = Math.min(...temp)\n    const priceMax = Math.max(...temp)\n\n    // Add X axis\n    const x = d3.scaleLinear()\n      .domain([0, 18])\n      .range([0, this.width])\n    this.svg.append('g')\n      .attr('transform', 'translate(0,' + this.height + ')')\n      .call(d3.axisBottom(x).tickFormat(d3.format('d')))\n\n    // Add Y axis\n    const y = d3.scaleLinear()\n      .domain([0, priceMax])\n      .range([this.height, 0])\n    this.svg.append('g')\n      .call(d3.axisLeft(y))\n\n    // Add line\n    this.svg.append('path')\n      .datum(inputData)\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 2)\n      .attr('d', d3.line()\n        // .curve(d3.curveNatural)\n        .x(function (d: any) { return x(d.hr) })\n        .y(function (d: any) { return y(d.temp) })\n      )\n\n    // Add dots\n    // const dots = this.svg.append('g')\n    // dots.selectAll('dot')\n    //   .data(inputData)\n    //   .enter()\n    //   .append('circle')\n    //   .attr('cx', (d: { hr: any}) => x(d.hr))\n    //   .attr('cy', (d: { temp: any}) => y(d.temp))\n    //   .attr('r', 2)\n    //   // .style('opacity', 0.5)\n\n    this.svg.append('text')\n      .attr('x', (this.width / 2))\n      .attr('y', 0 - (this.margin / 2))\n      .attr('text-anchor', 'middle')\n      .text('Temperature')\n\n      this.svg.append(\"text\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"x\", this.width)\n    .attr(\"y\", this.height - 6)\n    .text(\"h\");\n\n    this.svg.append(\"text\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"y\", 6)\n    .attr(\"x\", 30)\n    .attr(\"dy\", \".75em\")\n    .text(\"Â°C\");\n  }\n\n  private clearPlot () {\n    d3.select('svg').remove()\n  }\n\n  // private reDraw (): void {\n  //   this.clearPlot()\n  //   this.createSvg()\n  //   this.drawPlot(\n  //     [\n  //       { temp: 40000 * Math.random(), hr: 2009 },\n  //       { temp: 40000 * Math.random(), hr: 2010 },\n  //       { temp: 40000 * Math.random(), hr: 2012 },\n  //       { temp: 40000 * Math.random(), hr: 2014 },\n  //       { temp: 40000 * Math.random(), hr: 2016 },\n  //       { temp: 40000 * Math.random(), hr: 2017 }\n  //     ]\n  //   )\n  // }\n\n  mounted () {\n    this.createSvg()\n    this.drawPlot(this.data)\n  }\n}\n</script>"]}]}